{"name": "test_get_logos_list", "status": "broken", "statusDetails": {"message": "gspread.exceptions.WorksheetNotFound: tipalti", "trace": "self = <Spreadsheet ' cellenium-sheets@cellenium-screen.iam.gserviceaccount.com ' id:1HiBBUWKS_wheb3ANqCGVtOCpZPCFuN3KSae0hZOD0QE>\ntitle = 'tipalti'\n\n    def worksheet(self, title):\n        \"\"\"Returns a worksheet with specified `title`.\n    \n        :param title: A title of a worksheet. If there're multiple\n                      worksheets with the same title, first one will\n                      be returned.\n        :type title: str\n    \n        :returns: an instance of :class:`gspread.worksheet.Worksheet`.\n    \n        :raises:\n            WorksheetNotFound: if can't find the worksheet\n    \n        Example. Getting worksheet named 'Annual bonuses'\n    \n        >>> sht = client.open('Sample one')\n        >>> worksheet = sht.worksheet('Annual bonuses')\n        \"\"\"\n        sheet_data = self.fetch_sheet_metadata()\n        try:\n>           item = finditem(\n                lambda x: x[\"properties\"][\"title\"] == title,\n                sheet_data[\"sheets\"],\n            )\n\n..\\venv\\lib\\site-packages\\gspread\\spreadsheet.py:306: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfunc = <function Spreadsheet.worksheet.<locals>.<lambda> at 0x00000224DDCB88B0>\nseq = [{'properties': {'gridProperties': {'columnCount': 26, 'rowCount': 1000}, 'index': 0, 'sheetId': 0, 'sheetType': 'GRID', ...}}]\n\n    def finditem(func: Callable[[T], bool], seq: Iterable[T]) -> T:\n        \"\"\"Finds and returns first item in iterable for which func(item) is True.\"\"\"\n>       return next(item for item in seq if func(item))\nE       StopIteration\n\n..\\venv\\lib\\site-packages\\gspread\\utils.py:171: StopIteration\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_intro.TestTipalti object at 0x00000224FFA78FA0>\n\n    def test_get_logos_list(self) -> None:\n>       self.engine.get_element('logos')\n\ntipalti\\test_intro.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\core\\infrastructure\\driver\\engine.py:43: in get_element\n    element_name, element_type, element_locator = self.__get_element_properties(sheet_name=self.screen, value=name)\n..\\core\\infrastructure\\driver\\engine.py:57: in __get_element_properties\n    element_name = get_name_api(**kwargs)\n..\\core\\infrastructure\\modules\\reader.py:169: in get_name_api\n    return get_row_data(sheet_name=sheet_name, value=value)['name']\n..\\core\\infrastructure\\modules\\reader.py:165: in get_row_data\n    return __read_google_sheet(sheet_name, value, api)\n..\\core\\infrastructure\\modules\\reader.py:141: in __read_google_sheet\n    sheet = api.get_cached_sheet(sheet_name)\n..\\core\\infrastructure\\modules\\reader.py:127: in get_cached_sheet\n    return self.get_sheet.worksheet(sheet_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Spreadsheet ' cellenium-sheets@cellenium-screen.iam.gserviceaccount.com ' id:1HiBBUWKS_wheb3ANqCGVtOCpZPCFuN3KSae0hZOD0QE>\ntitle = 'tipalti'\n\n    def worksheet(self, title):\n        \"\"\"Returns a worksheet with specified `title`.\n    \n        :param title: A title of a worksheet. If there're multiple\n                      worksheets with the same title, first one will\n                      be returned.\n        :type title: str\n    \n        :returns: an instance of :class:`gspread.worksheet.Worksheet`.\n    \n        :raises:\n            WorksheetNotFound: if can't find the worksheet\n    \n        Example. Getting worksheet named 'Annual bonuses'\n    \n        >>> sht = client.open('Sample one')\n        >>> worksheet = sht.worksheet('Annual bonuses')\n        \"\"\"\n        sheet_data = self.fetch_sheet_metadata()\n        try:\n            item = finditem(\n                lambda x: x[\"properties\"][\"title\"] == title,\n                sheet_data[\"sheets\"],\n            )\n            return Worksheet(self.id, self.client, item[\"properties\"])\n        except (StopIteration, KeyError):\n>           raise WorksheetNotFound(title)\nE           gspread.exceptions.WorksheetNotFound: tipalti\n\n..\\venv\\lib\\site-packages\\gspread\\spreadsheet.py:312: WorksheetNotFound"}, "start": 1707065952743, "stop": 1707065954633, "uuid": "5d633170-dd51-47da-b887-2e8995e051be", "historyId": "955d5d728a8377d537224d782e89cea0", "testCaseId": "955d5d728a8377d537224d782e89cea0", "fullName": "tipalti.test_intro.TestTipalti#test_get_logos_list", "labels": [{"name": "parentSuite", "value": "tipalti"}, {"name": "suite", "value": "test_intro"}, {"name": "subSuite", "value": "TestTipalti"}, {"name": "host", "value": "IL-EVGENYP-LP"}, {"name": "thread", "value": "29536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tipalti.test_intro"}]}